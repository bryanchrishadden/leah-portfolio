{"ast":null,"code":"import _toConsumableArray from \"/Users/Shared/LEAH/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducers from './reducers';\n/* eslint-disable no-underscore-dangle */\n// Setup inspection for ReduxDevTools extension\n\nvar enableLogs = process.env.REACT_APP_ENABLE_LOGS === \"off\";\nvar allowReduxDevTools = enableLogs ? false : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nvar composeEnhancers = allowReduxDevTools || compose;\nvar middlewares = [enableLogs ? false : logger, thunk].filter(Boolean);\nexport default createStore(reducers, {}, composeEnhancers(applyMiddleware.apply(void 0, _toConsumableArray(middlewares))));","map":{"version":3,"sources":["/Users/Shared/LEAH/src/redux/store.js"],"names":["applyMiddleware","createStore","compose","logger","thunk","reducers","enableLogs","process","env","REACT_APP_ENABLE_LOGS","allowReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","middlewares","filter","Boolean"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA;AACA;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,KAAzD;AACA,IAAMC,kBAAkB,GAAGJ,UAAU,GACjC,KADiC,GAEjCK,MAAM,CAACC,oCAFX;AAGA,IAAMC,gBAAgB,GAAGH,kBAAkB,IAAIR,OAA/C;AACA,IAAMY,WAAW,GAAG,CAACR,UAAU,GAAG,KAAH,GAAWH,MAAtB,EAA8BC,KAA9B,EAAqCW,MAArC,CAA4CC,OAA5C,CAApB;AAEA,eAAef,WAAW,CAACI,QAAD,EAAW,EAAX,EAAeQ,gBAAgB,CAACb,eAAe,MAAf,4BAAmBc,WAAnB,EAAD,CAA/B,CAA1B","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducers from './reducers'\n\n/* eslint-disable no-underscore-dangle */\n// Setup inspection for ReduxDevTools extension\nconst enableLogs = process.env.REACT_APP_ENABLE_LOGS === \"off\";\nconst allowReduxDevTools = enableLogs\n  ? false\n  : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = allowReduxDevTools || compose;\nconst middlewares = [enableLogs ? false : logger, thunk].filter(Boolean);\n\nexport default createStore(reducers, {}, composeEnhancers(applyMiddleware(...middlewares)));\n"]},"metadata":{},"sourceType":"module"}